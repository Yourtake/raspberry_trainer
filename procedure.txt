
1.sudo apt-get update
sudo apt-get install hostapd -y
sudo apt-get install isc-dhcp-server -y
sudo apt-get install iptables-persistent -y
sudo nano /etc/dhcp/dhcpd.conf

Find the lines that say
option domain-name "example.org";
option domain-name-servers ns1.example.org, ns2.example.org;
and change them to add a # in the beginning so they say
#option domain-name "example.org";
#option domain-name-servers ns1.example.org, ns2.example.org;
Find the lines that say
# If this DHCP server is the official DHCP server for the local
# network, the authoritative directive should be uncommented.
#authoritative;
and remove the # so it says
# If this DHCP server is the official DHCP server for the local
# network, the authoritative directive should be uncommented.
authoritative;
Then scroll down to the bottom and add the following lines
subnet 192.168.42.0 netmask 255.255.255.0 {
	range 192.168.42.10 192.168.42.50;
	option broadcast-address 192.168.42.255;
	option routers 192.168.42.1;
	default-lease-time 600;
	max-lease-time 7200;
	option domain-name "local";
	option domain-name-servers 8.8.8.8, 8.8.4.4;
}


2.sudo nano /etc/default/isc-dhcp-server

and scroll down to INTERFACES="" and update it to say INTERFACES="wlan0"



3.sudo ifdown wlan0
sudo nano /etc/network/interfaces 

Add follwing lines
auto lo
iface lo inet loopback
iface eth0 inet dhcp

allow-hotplug wlan0

iface wlan0 inet static
	address 192.168.42.1
	netmask 255.255.255.0


4.sudo ifconfig wlan0 192.168.42.1
sudo nano /etc/hostapd/hostapd.conf


interface=wlan0
ssid=Wifi
country_code=IN
hw_mode=g
channel=6
macaddr_acl=0
auth_algs=1
ignore_broadcast_ssid=0
wpa=2
wpa_passphrase=raspberry
wpa_key_mgmt=WPA-PSK
wpa_pairwise=CCMP
wpa_group_rekey=86400
ieee80211n=1
wme_enabled=1


5.sudo nano /etc/default/hostapd

Find the line #DAEMON_CONF="" and edit it so it says DAEMON_CONF="/etc/hostapd/hostapd.conf"
Don't forget to remove the # in front to activate it!

6.sudo nano /etc/init.d/hostapd

DAEMON_CONF=
and change it to
DAEMON_CONF=/etc/hostapd/hostapd.conf

7.sudo nano /etc/sysctl.conf

Scroll to the bottom and add 
net.ipv4.ip_forward=1

8.**<optional>
sudo iptables -F
sudo iptables -X
sudo iptables -t nat -F
sudo iptables -t nat -X
**</optional>
--------------
LAN

sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
sudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
sudo iptables -A FORWARD -i eth0 -o wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT
sudo iptables -A FORWARD -i wlan0 -o eth0 -j ACCEPT
sudo iptables -t nat -A PREROUTING -p tcp --dport 80 -j DNAT --to-destination 192.168.42.1:80
sudo iptables -t nat -A PREROUTING -p tcp --dport 443 -j DNAT --to-destination 192.168.42.1:443
sudo sh -c "iptables-save > /etc/iptables.ipv4.nat"
sudo -i
sudo iptables-save > /etc/iptables/rules.v4
sudo iptables-restore < /etc/iptables/rules.v4
exit

or DONGLE

sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
sudo iptables -t nat -A POSTROUTING -o eth1 -j MASQUERADE
sudo iptables -A FORWARD -i eth1 -o wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT
sudo iptables -A FORWARD -i wlan0 -o eth1 -j ACCEPT
sudo iptables -t nat -A PREROUTING -p tcp --dport 80 -j DNAT --to-destination 192.168.42.1:80
sudo iptables -t nat -A PREROUTING -p tcp --dport 443 -j DNAT --to-destination 192.168.42.1:443
sudo sh -c "iptables-save > /etc/iptables.ipv4.nat"
sudo -i
sudo iptables-save > /etc/iptables/rules.v4
sudo iptables-restore < /etc/iptables/rules.v4
exit


9.sudo /usr/sbin/hostapd /etc/hostapd/hostapd.conf
sudo systemctl daemon-reload
sudo reboot
sudo service hostapd start 
sudo service isc-dhcp-server start
sudo update-rc.d hostapd enable 
sudo update-rc.d isc-dhcp-server enable

10.sudo apt-get install nginx -y
sudo /etc/init.d/nginx start
sudo apt-get install php5-fpm -y
sudo apt-get install curl libcurl3 php5-curl -y
sudo apt-get install mysql-server -y
sudo php5enmod mcrypt
sudo service php5-fpm restart
sudo chmod 777 /usr/share/nginx/html
sudo nano /etc/nginx/sites-enabled/default

Change the file to
##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	listen 80 default_server;
	listen [::]:80 default_server;

	# SSL configuration
	#
	listen 443 ssl default_server;
	listen [::]:443 ssl default_server;
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
#	include /etc/ssl/certs/ssl-cert-snakeoil.pem;

	root /usr/share/nginx/html;

	# Add index.php to the list if you are using PHP
	index index.php index.html index.htm index.nginx-debian.html;

	server_name _;
#	ssl on;
	ssl_certificate /etc/nginx/ssl/nginx.crt;
	ssl_certificate_key /etc/nginx/ssl/nginx.key;
	
	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		#try_files $uri $uri/ =404;
		try_files $uri $uri/ /redirect.php;
	}
	
	error_page 400 /redirect.php;
	error_page 497 /redirect.php;

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
	#	# With php5-cgi alone:
	#	fastcgi_pass 127.0.0.1:9000;
	#	# With php5-fpm:
		fastcgi_pass unix:/var/run/php5-fpm.sock;
		fastcgi_index index.php;
		include /etc/nginx/fastcgi.conf;
	}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}



# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
server {
	listen 6969;
##	listen [::]:80;

	server_name localhost;

	root /usr/share/phpmyadmin;
	index index.php index.html index.htm;
	
#	if(!-e $request_filename){
#		rewrite ^/(.+)$ /index.php?url=$1 last;
#		break;
#	}

	location ~ \.php$ {
		try_files $uri $uri/ =404;
		fastcgi_pass unix:/var/run/php5-fpm.sock;
		fastcgi_index index.php;
		include /etc/nginx/fastcgi.conf;
	}
}
Copy root web folder to /usr/shar/nginx/html/ 
create database yourtake
table client_reply
row name,number, email, date, answer,question,ipaddress,type

11.sudo mkdir /etc/nginx/ssl
sudo apt-get install phpmyadmin -y
sudo ln -s /usr/share/phpmyadmin /usr/share/nginx/html
sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.crt
sudo service nginx restart
sudo apt-get install cron
crontab -e

add 
SHELL=/bin/bash
HOME=/
MAILTO=”admin@yourtake.in”
* * * * * /usr/bin/php /usr/share/nginx/html/upload.php
@reboot echo "System start up"

12. sudo service cron start
sudo update-rc.d cron enable
sudo /etc/init.d/nginx reload
sudo update-rc.d nginx enable


13. copy paste pipoweroff.py to /home/pi

sudo nano /etc/rc.local
paste following after   fi
sudo python /home/pi/pipoweroff.py &

setup ciruit mentioned in circuit.png
sudo reboot

14. sudo systemctl start vncserver-x11-serviced.service
sudo systemctl enable vncserver-x11-serviced.service
connect realvnc and
set timezones to Asia , Calcutta




